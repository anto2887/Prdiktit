# docker-compose.prod.yml - Production configuration for Railway
version: '3.8'

services:
  # PostgreSQL service (Railway will provide this as an add-on)
  # This section is mainly for local production testing
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres} 
      - POSTGRES_DB=${DB_NAME:-football_predictions}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Redis service (Railway will provide this as an add-on)
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Backend service - Production configuration
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      # Environment indicator
      - ENVIRONMENT=production
      
      # Database configuration (Railway will inject these)
      - DATABASE_URI=${DATABASE_URI}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      
      # Redis configuration (Railway will inject these)
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      
      # CORS - Add your Railway domain here
      - CORS_ORIGINS=${CORS_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=["GET","POST","PUT","DELETE","OPTIONS","PATCH"]
      - CORS_ALLOW_HEADERS=["Authorization","Content-Type","X-Requested-With"]
      
      # API Configuration
      - FOOTBALL_API_KEY=${FOOTBALL_API_KEY}
      - API_RATE_LIMIT=120
      - RATE_LIMIT_PER_MINUTE=120
      - CREATE_TABLES_ON_STARTUP=false
      
      # Production settings
      - NODE_ENV=production
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  # Frontend service - Production configuration  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    environment:
      # This will be your Railway backend URL
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_ENV=production
      - NODE_ENV=production
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge